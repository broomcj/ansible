--- # Linux Academy: 'Running Container Clusters with Kubernets"
- hosts: minions
  user: user
  become: yes
  connection: ssh
  gather_facts: yes

  vars:
    docker_repo: virt7-docker-common-release
    kub_dir: /etc/kubernetes

  tasks:
   - name: Install NTPD and trigger Update
     yum: 
       name: ntp
       state: latest
     notify:
      - EnableStartNTPD
   - name: Check if HOSTS copy is saved already
     stat:
       path: /etc/hosts.original
     register: stat_host_orig
   - name: Save copy of HOSTS if needed
     command: mv /etc/hosts /etc/hosts.original
     when: stat_host_orig.stat.exists == False
   - name: Copy /etc/hosts with private IPs
     copy:
       src: /etc/hosts
       dest: /etc/hosts
       force: yes
       owner: root
       group: root
       mode: 0644
   - name: Copy Docker Repo and YUM Update again
     copy:
       src: /etc/yum.repos.d/{{docker_repo}}.repo
       dest: /etc/yum.repos.d/{{docker_repo}}.repo
       force: yes
       owner: root
       group: root
       mode: 0644
     notify:
      - YumUpdate
# TODO PAUSE: Make sure IPTABLES and FIREWALLD services are not running
   - name: Install ECTD
     yum:
       name: etcd
       state: latest
   - name: Install KUBERNETES and DOCKER with repo
     yum:
       name: "{{ item }}"
       enablerepo: "{{ docker_repo }}"
       state: latest
     with_items:
      - kubernetes
      - docker
# TODO PAUSE: Make kubernete config files update: CONFIG, KUBELET, APISERVER
   - name: Copy kubernete config - CONFIG, KUBELET, APISERVER
     copy: 
       src: "{{ kub_dir }}/{{ item }}"
       dest: "{{ kub_dir}}/{{ item }}"
       force: yes
       owner: root
       group: root
       mode: 0644
     with_items:
      - config
      - kubelet
      - apiserver 
   - name: Enable and Start KUBE-PROXY, KUBELET, DOCKER
     service:
       name: "{{ item }}"
       enabled: yes
       state: started
     with_items:
      - kube-proxy
      - kubelet
      - docker
  handlers:
   - name: YumUpdate
     yum: 
       name: '*'
       state: latest
   - name: EnableStartNTPD
     service:
       name: ntpd
       enabled: yes
       state: started
